library(ggmap)
library(ggplot2)
library(maps)
# or you can try e.g. require(maps)
# map("usa")
map('state') # not necessary, just checking we can draw a map
install.packages(ggmap)
install.packages(ggmap)
library(ggmap)
install.packages("geometry")
library(ggmap)
library(ggmap)
install.packages("ggmap")
setwd("~/FIT5147/week 1")
install.packages("ggplot2")
install.packages("maps")
library(ggmap)
library(ggplot2)
library(maps)
# or you can try e.g. require(maps)
# map("usa")
map('state') # not necessary, just checking we can draw a mapinstall.packages
data <- read.csv("Household-heating-by-State-2008.csv", header=T)
head(data)
names(data)
data <- read.csv("Household-heating-by-State-2008.csv", header=T)
data <- read.csv("Household-heating-by-Congressional-District-2008.csv", header=T)
head(data)
names(data)
names(data)[4] <- "MobileHomes"
names(data)
ag <- aggregate(MobileHomes ~ States, FUN = mean, data = data)
names(data)[4] <- "MobileHomes"
names(data)
ag <- aggregate(MobileHomes ~ States, FUN = mean, data = data)
head(data)
View(data)
data <- read.csv("Household-heating-by-State-2008.csv", header=T)
names(data)[4] <- "MobileHomes"
names(data)
ag <- aggregate(MobileHomes ~ States, FUN = mean, data = data)
View(ag)
head(ag)
dim(ag)
m.usa <- map_data("state") # we want the states
head(m.usa)
dim(m.usa) # more info than we need
df <- data.frame(region = tolower(ag$States), MobileHomes = ag$MobileHomes, stringsAsFactors = F)
dim(df)
View(m.usa)
ggplot(df, aes(map_id = region)) +                  # Create a empty canvas
expand_limits(x = m.usa$long, y = m.usa$lat) +    # draw the grid
geom_map(aes(fill = MobileHomes), map = m.usa) +  # draw a us map, fill = MobileHomes means color the map according to MobileHomes property
coord_map()
ggplot(df, aes(map_id = region)) +                  # Create a empty canvas
expand_limits(x = m.usa$long, y = m.usa$lat) +    # draw the grid
geom_map(aes(fill = MobileHomes), map = m.usa) +  # draw a us map, fill = MobileHomes means color the map according to MobileHomes property
coord_map()
library(ggmap)
library(ggplot2)
library(maps)
# or you can try e.g. require(maps)
# map("usa")
map('sta
# or you can try e.g. require(maps)
# map("usa")
map('state') # not necessary, just checking we can draw a mapinstall.packages
View(ag)
library(ggmap)
library(ggplot2)
library(maps)
# or you can try e.g. require(maps)
# map("usa")
map('state') # not necessary, just checking we can draw a map
data <- read.csv("Household-heating-by-State-2008.csv", header=T)
head(data)
names(data)
names(data)[4] <- "MobileHomes"
names(data)
ag <- aggregate(MobileHomes ~ States, FUN = mean, data = data)
head(ag)
dim(ag)
m.usa <- map_data("state") # we want the states
head(m.usa)
dim(m.usa) # more info than we need
df <- data.frame(region = tolower(ag$States), MobileHomes = ag$MobileHomes, stringsAsFactors = F)
dim(df)
ggplot(df, aes(map_id = region)) +                  # Create a empty canvas
expand_limits(x = m.usa$long, y = m.usa$lat) +    # draw the grid
geom_map(aes(fill = MobileHomes), map = m.usa) +  # draw a us map, fill = MobileHomes means color the map according to MobileHomes property
coord_map()                                       # fix the ratio of the x and y axises, to match a map
library(mapproj)
install.packages("mapproj")
ggplot(df, aes(map_id = region)) +                  # Create a empty canvas
expand_limits(x = m.usa$long, y = m.usa$lat) +    # draw the grid
geom_map(aes(fill = MobileHomes), map = m.usa) +  # draw a us map, fill = MobileHomes means color the map according to MobileHomes property
coord_map()                                       # fix the ratio of the x and y axises, to match a map
