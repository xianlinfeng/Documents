SCIP: is the main data structure for scip, which include many pointers, such as memory, setting, interrupt data,
        dynamic problem statistics, original problem data, and primal data and solution storage.

SCIP_RETCODE: return code for SCIP functions, non-positive codes are errors. should be handled with SCIP_CALL() macro.

SCIP_CALL: return the RETCODE if it is not SCIP_OKAY
                SCIP_RETCODE foo(SCIP* scip)
                    {
                    SCIP_CALL( SCIPsolve(scip) );
                    return SCIP_OKAY;
                    }

SCIPallocBufferArray(...):  to allocate memory for an array
        e.g.    SCIP_RETCODE SCIPallocBufferArray(SCIP* scip, void** ptr, int size);
SCIPfreeBufferArray(...):    to free allocated memory for an array
        e.g.    void SCIPfreeBufferArray(SCIP* scip, void** ptr);
SCIPallocMemory(...) :  to allocate memory for a struct
        e.g.    SCIP_RETCODE SCIPallocMemory(SCIP* scip, void** ptr) );
SCIPfreeMemory(...) :   to free allocated memory for a struct
        e.g.    void SCIPfreeMemory(SCIP* scip, void** ptr);


Question:
1. cannot open src/scip/config.h which is needed by scip.h



